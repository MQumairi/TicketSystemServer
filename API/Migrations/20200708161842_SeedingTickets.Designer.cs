// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace API.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20200708161842_SeedingTickets")]
    partial class SeedingTickets
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("authorId")
                        .HasColumnType("integer");

                    b.Property<string>("date")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("product")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            authorId = 1,
                            date = "2020-01-04",
                            description = "The app installation crashes after updating to version 10.15.5.",
                            product = "Product 1",
                            status = "Urgent",
                            title = "Crashes after update"
                        },
                        new
                        {
                            Id = 2,
                            authorId = 2,
                            date = "2020-01-04",
                            description = "Displays a 502 error w",
                            product = "Product 1",
                            status = "Low",
                            title = "Not connecting to database"
                        },
                        new
                        {
                            Id = 3,
                            authorId = 2,
                            date = "2020-01-04",
                            description = "The app installation crashes after updating to version 10.15.5.",
                            product = "Product 2",
                            status = "Low",
                            title = "Crashes after update"
                        },
                        new
                        {
                            Id = 4,
                            authorId = 1,
                            date = "2020-01-04",
                            description = "The app installation crashes after updating to version 10.15.5.",
                            product = "Product 4",
                            status = "Done",
                            title = "Crashes after update"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
